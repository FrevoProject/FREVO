group Java;

program(globals,functions) ::= <<
class Wrapper {
    <globals; separator="\n">
    <functions; separator="\n">
}
>>

variable(type,name) ::= "<type> <name>;"

arrayDeclaration(type,name,size) ::= "<type> <name>[]=new <type>[<size>];"

array(name,index) ::= "<name>[<index>]"

arrayexp(index) ::= "[<index>]"

dummy() ::= "dummy"

globalVariable ::= variable

function(type,name,args,locals,stats) ::= <<
<type> <name>(<args; separator=", ">) {
    <locals; separator="\n">
    <stats; separator="\n">
}
>>

type_int() ::= "int"

type_char() ::= "char"

type_user_object(name) ::= "<name>"

parameter(type,name) ::= "<type> <name>"

statement(expr) ::= "<expr>;"

statementList(locals,stats) ::= <<
{
    <locals; separator="\n">
    <stats; separator="\n">
}<\n>
>>

forLoop(e1,e2,e3,locals,stats) ::= <<
for (<e1> <e2>; <e3>) {
    <locals; separator="\n">
    <stats; separator="\n">
}
>>

assign(lhs,rhs) ::= "<lhs> = <rhs>;"

equals(left,right) ::= "<left> == <right>"

lessThan(left,right) ::= "<left> \< <right>"

moreThan(left,right) ::= "<left> \> <right>"

lessOrEqual(left,right) ::= "<left> \<= <right>"

moreOrEqual(left,right) ::= "<left> \>= <right>"

unEqual(left,right) ::= "<left> != <right>"

add(left,right) ::= "<left> + <right>"

refVar(id) ::= "<id>"

iconst(value) ::= "<value>"
